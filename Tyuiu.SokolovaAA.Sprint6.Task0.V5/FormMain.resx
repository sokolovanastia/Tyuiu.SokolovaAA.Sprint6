<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAEBAQEBAQEBAQEBAQECAgMCAgICAgQDAwIDBQQFBQUEBAQF
        BgcGBQUHBgQEBgkGBwgICAgIBQYJCgkICgcICAj/2wBDAQEBAQICAgQCAgQIBQQFCAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCAAoAXoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/90ABAAF/9oADAMBAAIRAxEAPwD+/iiopZFjRpG3bVGTgEn8hX5VN/wWj/YBbxT4x8F6
        f42+N3iHxJ4fvW0/WrbSfg/4uv8A+zbgZ+SVoNNdVPynHPODigD9WqK+YP2Yf2wfgH+2J4O13x58AvFe
        seJvDmmahLpWoNqOgaho81pdRkq8UlvfQwyqylWByvGKPAf7UXg/4q/FHWvh18LtD8R+O9G0lnt9a8UW
        aouk6bdKARbiWRlNw5zz5IcLjDEGgD6foor59+Ovx90z9n/TdL8VeLfBvjHVPh6Wc6xrumQLcxaBGBkS
        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
</value>
  </data>
</root>